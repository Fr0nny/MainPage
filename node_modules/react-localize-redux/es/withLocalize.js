var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

import React, { Component } from 'react';
import { LocalizeContext } from './LocalizeContext';

export function withLocalize(WrappedComponent) {
  var LocalizedComponent = function LocalizedComponent(props) {
    return React.createElement(
      LocalizeContext.Consumer,
      null,
      function (context) {
        return React.createElement(WrappedComponent, _extends({}, context, props));
      }
    );
  };

  return LocalizedComponent;
}